// Note: this util.ðŸ¥ž only includes helper functions and constants
// needed for ethernet driver for verification purposes.
// Other functions and constants are included in util2.ðŸ¥ž and
// to be updated later.

#define BIT(nr)         (1 << nr)
#define MASK_16         65535
#define BYTE_MASK       255
#define HALF_BIW        (@biw >> 1)

// Returns a % b, asuming b = 2^n for some x and n
fun pnk_modulo(1 a, 1 b) {
    /*@ requires b != 0 @*/
    /*@ ensures retval == (a % b) @*/
    var result = a & (b - 1);
    /*@ inhale result == (a % b) @*/
    return result;
}

/* @ method ffimicrokit_notify(x1: Int, x2: Int, x3: Int, x4: Int)
 @*/

/* @ method ffimicrokit_deferred_irq_ack(x1: Int, x2: Int, x3: Int, x4: Int)
 @*/

/* @ method ffimicrokit_deferred_notify(x1: Int, x2: Int, x3: Int, x4: Int)
 @*/

#define microkit_notify(channel)        \
    @microkit_notify(0,channel,0,0);    \

#define assert(assert_val)              \
    @assert(0,assert_val,0,0);          \

#define microkit_deferred_irq_ack(channel)       \
    @microkit_deferred_irq_ack(0,channel,0,0);   \

#define microkit_deferred_notify(channel)        \
    @microkit_deferred_notify(0,channel,0,0);    \
