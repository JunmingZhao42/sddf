/* Copy `len` bytes from src to dst */
fun pnk_memcpy(1 dst, 1 src, 1 len) {
	var i = 0;
    var c = 0;
    while (i < len) {
        !ld8 c, (src + i);
        !st8 c, (dst + i);
        i = i + 1;
    }
	return 0;
}

/* Returns a % b */
fun pnk_modulo(1 a, 1 b) {
    if (b == 0) {
        // make sure b != 0
        return -1;
    } else {
        var c = a;
        while (c >= b) {
            c = c - b;
        }
        return c;
    }
}

/* Temporary helper to efficiently mod 512,
   Returns a % 512 */
fun pnk_modulo512(1 a) {
    var b = 0;
    b = a & 511;
    return b;
}
