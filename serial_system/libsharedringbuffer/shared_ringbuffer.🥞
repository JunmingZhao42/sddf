// #define SIZE 512

fun ring_write_idx(1 ring_addr) {
    var write_idx_addr = @base;
    @ld_hw(ring_addr, 1, write_idx_addr, 1);
    var write_idx = 0;
    write_idx = lds {1} write_idx_addr;
    return write_idx;
}

fun ring_read_idx(1 ring_addr) {
    var read_idx_addr = @base;
    @ld_hw(ring_addr + 4, 1, read_idx_addr, 1);
    var read_idx = 0;
    read_idx = lds {1} read_idx_addr;
    return read_idx;
}

fun ring_empty(1 ring_addr) {
    var write_idx = 0;
    var read_idx = 0;
    write_idx = ring_write_idx(ring_addr);
    read_idx = ring_read_idx(ring_addr);
    var ret = 0;
    ret = (pnk_modulo512(write_idx - read_idx) != 0);
    return ret;
}

fun ring_full(1 ring_addr) {
    var write_idx = 0;
    var read_idx = 0;
    write_idx = ring_write_idx(ring_addr);
    read_idx = ring_read_idx(ring_addr);
    var ret = 0;
    ret = (pnk_modulo512(write_idx - read_idx + 1) == 0);
    return ret;
}

fun ring_size(1 ring_addr) {
    var write_idx = 0;
    var read_idx = 0;
    write_idx = ring_write_idx(ring_addr);
    read_idx = ring_read_idx(ring_addr);
    return write_idx - read_idx;
}

fun enqueue_used() {
    return -1;
}

fun driver_dequeue() {
    return -1;
}

fun driver_enqueue() {
    return -1;
}

fun enqueue_avail() {
    return -1;
}
